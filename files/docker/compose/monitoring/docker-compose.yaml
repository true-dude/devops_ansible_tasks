version: '3.5'
networks:
  monitoring:
    driver: bridge
#    driver: bridge
    ipam:
      config:
        - subnet: 172.188.0.0/16
volumes:
  prometheus_data: {}
services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - '--path.procfs=/host/proc'
    - '--path.rootfs=/rootfs'
    - '--path.sysfs=/host/sys'
    - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
    - 9100
    networks:
    - monitoring
    ports:
    - "0.0.0.0:9100:9100"
#  loki:
#    image: grafana/loki:2.6.1
#    networks:
#    - monitoring
#    ports:
#      - "0.0.0.0:3100:3100"
#    volumes:
      # directory must be created first, with uid:gid 10001:10001
#      - ./loki:/loki

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.46.0
#    container_name: cadvisor
#    ports:
#    - 8080:8080
#    privileged: true
#    volumes:
#    - /:/rootfs:ro
#    - /var/run:/var/run:rw
#    - /sys:/sys:ro
#    - /var/lib/docker/:/var/lib/docker:ro
#    networks:
#    - monitoring
#    ports:
#      - "0.0.0.0:8080:8080"


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    restart: always
#    network_mode: bridge
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
    - monitoring
    ports:
      - "0.0.0.0:8080:8080"

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.46.0
#    container_name: cadvisor
#    ports:
#    - 8080:8080
#    volumes:
#    - /:/rootfs:ro
#    - /var/run:/var/run:rw
#    - /sys:/sys:ro
#    - /var/lib/docker/:/var/lib/docker:ro
#    - /etc/machine-id:/etc/machine-id:ro
#    - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
#    devices:
#    - /dev/kmsg:/dev/kmsg
#    networks:
#    - monitoring
#    ports:
#      - "0.0.0.0:8080:8080"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - /home/ark/ansible_task/files/docker/compose/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml #./prometheus.yml:/etc/prometheus/prometheus.yml  
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - "0.0.0.0:9090:9090"
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "0.0.0.0:3000:3000"
    networks:
      - monitoring
